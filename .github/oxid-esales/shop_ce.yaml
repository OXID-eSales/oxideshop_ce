# {{ $org := "oxid-esales" }}organisation: {{ $org }}
# {{ $name := "oxideshop-ce" }}name: {{ $name }}
# {{ $repo := "OXID-eSales/oxideshop_ce" }}repo: {{ $repo }}

install: &install
  method: script
  script: 'source/.github/oxid-esales/install.sh'
  cache:
    prepared_shop: true
  composer:
    root_url: ''
  output:
    files: |
      docker-compose.yml
      source/composer.json*
      source/composer.lock
      source/source/config.inc.php
      source/vendor/oxid-esales/oxideshop-ce/source/config.inc.php
      data/php/logs/error_log.txt

install_shop_with_modules: *install

runscript: &runscript
  matrix:
    script: |
      [
        "shop:~/unit.sh",
        "shop:~/integration.sh",
        "shop:~/codeception.sh",
        "setup:~/shop-setup.sh"
      ]
  shop: &shop
    path: ''
    container:
      options: '-e XDEBUG_MODE=coverage -e GITHUB_EVENT_NAME={{ .Github.EventName }} -e GITHUB_BASE_REF={{ .Github.BaseRef }} -e GITHUB_REF={{ .Github.Ref }} -e GITHUB_REF_NAME={{ .Github.RefName }}'
  setup:
    <<: *shop
    load_shop: '{{ .Data.install_shop_with_modules.cache.prepared_shop_prefix }}'

runslim:
  <<: *runscript
  matrix:
    script: '["shop:~/php-cs-report.sh"]'

sonarcloud:
  matrix:
    testplan: '["-","~/sonarcloud_oxideshop_ce_internal.yaml"]'
  strip_path: '/var/www/vendor/{{ print $org }}/{{ print $name}}/'

finish:
  slack_title: 'Shop CE ({{ .Data.install.git.shop_ref }}) by {{ .Github.Actor }}'
  slack_compact: true
