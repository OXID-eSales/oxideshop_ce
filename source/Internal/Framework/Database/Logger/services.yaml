services:
  _defaults:
    autowire: true

  OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\NullLogger:

  OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryLogger:
    arguments:
      $psrLogger: '@database.psr_logger'

  OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactoryInterface:
    class: OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactory
    arguments:
      $queryLogger: '@OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryLogger'
      $nullLogger: '@OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\NullLogger'
      $logQueriesInAdmin: '%oxid_log_admin_queries%'

  OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryFilterInterface:
    class: OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryFilter

  database.monolog_logger_factory:
    class: OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory
    arguments:
      $configuration: '@database.logger.admin_monolog_configuration'

  database.logger.admin_monolog_configuration:
    class: OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration
    arguments:
      $loggerName: 'OXID Admin Logger'
      $logFilePath: '@=service("OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface").getAdminLogFilePath()'
      $logLevel: !php/const Psr\Log\LogLevel::DEBUG

  database.psr_logger:
    class: Monolog\Logger
    factory: ['@database.monolog_logger_factory', 'create']
